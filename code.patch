diff --git a/build_overrides/partition_alloc.gni b/build_overrides/partition_alloc.gni
index d6d510e46..12efae931 100644
--- a/build_overrides/partition_alloc.gni
+++ b/build_overrides/partition_alloc.gni
@@ -39,6 +39,9 @@ if (_use_shim && !_disable_partition_alloc_everywhere) {
   _default_allocator = "none"
 }
 
+# Overriden for GDAL: _use_shim=true causes crashes at runtime
+_use_shim = false
+
 # See base/allocator/partition_allocator/external_builds.md
 use_allocator_shim_default = _use_shim
 use_partition_alloc_as_malloc_default = _default_allocator == "partition"
diff --git a/core/fpdfapi/page/cpdf_occontext.cpp b/core/fpdfapi/page/cpdf_occontext.cpp
index 7d2b35fa7..a18f35487 100644
--- a/core/fpdfapi/page/cpdf_occontext.cpp
+++ b/core/fpdfapi/page/cpdf_occontext.cpp
@@ -171,7 +171,7 @@ bool CPDF_OCContext::GetOCGVisible(const CPDF_Dictionary* pOCGDict) const {
   return bState;
 }
 
-bool CPDF_OCContext::CheckPageObjectVisible(const CPDF_PageObject* pObj) const {
+bool CPDF_OCContextInterface::CheckPageObjectVisible(const CPDF_PageObject* pObj) const {
   const CPDF_ContentMarks* pMarks = pObj->GetContentMarks();
   for (size_t i = 0; i < pMarks->CountItems(); ++i) {
     const CPDF_ContentMarkItem* item = pMarks->GetItem(i);
diff --git a/core/fpdfapi/page/cpdf_occontext.h b/core/fpdfapi/page/cpdf_occontext.h
index c0012d1ec..bcd2dd7a9 100644
--- a/core/fpdfapi/page/cpdf_occontext.h
+++ b/core/fpdfapi/page/cpdf_occontext.h
@@ -19,14 +19,20 @@ class CPDF_Dictionary;
 class CPDF_Document;
 class CPDF_PageObject;
 
-class CPDF_OCContext final : public Retainable {
+class CPDF_OCContextInterface : public Retainable {
+ public:
+  virtual ~CPDF_OCContextInterface() = default;
+  virtual bool CheckOCGDictVisible(const CPDF_Dictionary* pOCGDict) const = 0;
+  bool CheckPageObjectVisible(const CPDF_PageObject* pObj) const;
+};
+
+class CPDF_OCContext final : public CPDF_OCContextInterface {
  public:
   enum UsageType { kView = 0, kDesign, kPrint, kExport };
 
   CONSTRUCT_VIA_MAKE_RETAIN;
 
-  bool CheckOCGDictVisible(const CPDF_Dictionary* pOCGDict) const;
-  bool CheckPageObjectVisible(const CPDF_PageObject* pObj) const;
+  bool CheckOCGDictVisible(const CPDF_Dictionary* pOCGDict) const override;
 
  private:
   CPDF_OCContext(CPDF_Document* pDoc, UsageType eUsageType);
diff --git a/core/fpdfapi/render/cpdf_renderoptions.h b/core/fpdfapi/render/cpdf_renderoptions.h
index ab3a4e144..75be704ba 100644
--- a/core/fpdfapi/render/cpdf_renderoptions.h
+++ b/core/fpdfapi/render/cpdf_renderoptions.h
@@ -71,7 +71,7 @@ class CPDF_RenderOptions {
   void SetDrawAnnots(bool draw) { m_bDrawAnnots = draw; }
   bool GetDrawAnnots() const { return m_bDrawAnnots; }
 
-  void SetOCContext(RetainPtr<CPDF_OCContext> context) {
+  void SetOCContext(RetainPtr<CPDF_OCContextInterface> context) {
     m_pOCContext = context;
   }
 
@@ -80,7 +80,7 @@ class CPDF_RenderOptions {
   bool m_bDrawAnnots = false;
   Options m_Options;
   ColorScheme m_ColorScheme = {};
-  RetainPtr<CPDF_OCContext> m_pOCContext;
+  RetainPtr<CPDF_OCContextInterface> m_pOCContext;
 };
 
 #endif  // CORE_FPDFAPI_RENDER_CPDF_RENDEROPTIONS_H_
diff --git a/core/fxge/agg/fx_agg_driver.cpp b/core/fxge/agg/fx_agg_driver.cpp
index f962de093..8f4b9abda 100644
--- a/core/fxge/agg/fx_agg_driver.cpp
+++ b/core/fxge/agg/fx_agg_driver.cpp
@@ -988,7 +988,7 @@ void CFX_AggDeviceDriver::InitPlatform() {}
 void CFX_AggDeviceDriver::DestroyPlatform() {}
 
 bool CFX_AggDeviceDriver::DrawDeviceText(
-    pdfium::span<const TextCharPos> pCharPos,
+    const pdfium::span<const TextCharPos>& pCharPos,
     CFX_Font* pFont,
     const CFX_Matrix& mtObject2Device,
     float font_size,
diff --git a/core/fxge/agg/fx_agg_driver.h b/core/fxge/agg/fx_agg_driver.h
index 47281c8d8..cb7b8deab 100644
--- a/core/fxge/agg/fx_agg_driver.h
+++ b/core/fxge/agg/fx_agg_driver.h
@@ -91,7 +91,7 @@ class CFX_AggDeviceDriver final : public RenderDeviceDriverIface {
                    BlendMode blend_type) override;
   bool ContinueDIBits(CFX_ImageRenderer* handle,
                       PauseIndicatorIface* pPause) override;
-  bool DrawDeviceText(pdfium::span<const TextCharPos> pCharPos,
+  bool DrawDeviceText(const pdfium::span<const TextCharPos>& pCharPos,
                       CFX_Font* pFont,
                       const CFX_Matrix& mtObject2Device,
                       float font_size,
diff --git a/core/fxge/cfx_renderdevice.cpp b/core/fxge/cfx_renderdevice.cpp
index 5c64dcc1d..a6b23d8ff 100644
--- a/core/fxge/cfx_renderdevice.cpp
+++ b/core/fxge/cfx_renderdevice.cpp
@@ -1042,7 +1042,7 @@ bool CFX_RenderDevice::SyncInternalBitmaps() {
 }
 #endif
 
-bool CFX_RenderDevice::DrawNormalText(pdfium::span<const TextCharPos> pCharPos,
+bool CFX_RenderDevice::DrawNormalText(const pdfium::span<const TextCharPos>& pCharPos,
                                       CFX_Font* pFont,
                                       float font_size,
                                       const CFX_Matrix& mtText2Device,
diff --git a/core/fxge/cfx_renderdevice.h b/core/fxge/cfx_renderdevice.h
index de0a84b99..2ffe28099 100644
--- a/core/fxge/cfx_renderdevice.h
+++ b/core/fxge/cfx_renderdevice.h
@@ -144,7 +144,7 @@ class CFX_RenderDevice {
                             BlendMode blend_mode);
   bool ContinueDIBits(CFX_ImageRenderer* handle, PauseIndicatorIface* pPause);
 
-  bool DrawNormalText(pdfium::span<const TextCharPos> pCharPos,
+  bool DrawNormalText(const pdfium::span<const TextCharPos>& pCharPos,
                       CFX_Font* pFont,
                       float font_size,
                       const CFX_Matrix& mtText2Device,
diff --git a/core/fxge/renderdevicedriver_iface.cpp b/core/fxge/renderdevicedriver_iface.cpp
index e9db61afb..879e89c4a 100644
--- a/core/fxge/renderdevicedriver_iface.cpp
+++ b/core/fxge/renderdevicedriver_iface.cpp
@@ -50,7 +50,7 @@ bool RenderDeviceDriverIface::ContinueDIBits(CFX_ImageRenderer* handle,
 }
 
 bool RenderDeviceDriverIface::DrawDeviceText(
-    pdfium::span<const TextCharPos> pCharPos,
+    const pdfium::span<const TextCharPos>& pCharPos,
     CFX_Font* pFont,
     const CFX_Matrix& mtObject2Device,
     float font_size,
diff --git a/core/fxge/renderdevicedriver_iface.h b/core/fxge/renderdevicedriver_iface.h
index d391a2322..dc32f65e4 100644
--- a/core/fxge/renderdevicedriver_iface.h
+++ b/core/fxge/renderdevicedriver_iface.h
@@ -96,7 +96,7 @@ class RenderDeviceDriverIface {
                            BlendMode blend_type) = 0;
   virtual bool ContinueDIBits(CFX_ImageRenderer* handle,
                               PauseIndicatorIface* pPause);
-  virtual bool DrawDeviceText(pdfium::span<const TextCharPos> pCharPos,
+  virtual bool DrawDeviceText(const pdfium::span<const TextCharPos>& pCharPos,
                               CFX_Font* pFont,
                               const CFX_Matrix& mtObject2Device,
                               float font_size,
diff --git a/core/fxge/win32/cgdi_printer_driver.cpp b/core/fxge/win32/cgdi_printer_driver.cpp
index 696209f09..38c86553c 100644
--- a/core/fxge/win32/cgdi_printer_driver.cpp
+++ b/core/fxge/win32/cgdi_printer_driver.cpp
@@ -162,7 +162,7 @@ bool CGdiPrinterDriver::StartDIBits(RetainPtr<const CFX_DIBBase> bitmap,
 }
 
 bool CGdiPrinterDriver::DrawDeviceText(
-    pdfium::span<const TextCharPos> pCharPos,
+    const pdfium::span<const TextCharPos>& pCharPos,
     CFX_Font* pFont,
     const CFX_Matrix& mtObject2Device,
     float font_size,
diff --git a/core/fxge/win32/cgdi_printer_driver.h b/core/fxge/win32/cgdi_printer_driver.h
index 961a93c3d..190d69c63 100644
--- a/core/fxge/win32/cgdi_printer_driver.h
+++ b/core/fxge/win32/cgdi_printer_driver.h
@@ -43,7 +43,7 @@ class CGdiPrinterDriver final : public CGdiDeviceDriver {
                    const FXDIB_ResampleOptions& options,
                    std::unique_ptr<CFX_ImageRenderer>* handle,
                    BlendMode blend_type) override;
-  bool DrawDeviceText(pdfium::span<const TextCharPos> pCharPos,
+  bool DrawDeviceText(const pdfium::span<const TextCharPos>& pCharPos,
                       CFX_Font* pFont,
                       const CFX_Matrix& mtObject2Device,
                       float font_size,
diff --git a/core/fxge/win32/cps_printer_driver.cpp b/core/fxge/win32/cps_printer_driver.cpp
index 87c3f8418..be5811424 100644
--- a/core/fxge/win32/cps_printer_driver.cpp
+++ b/core/fxge/win32/cps_printer_driver.cpp
@@ -199,7 +199,7 @@ bool CPSPrinterDriver::StartDIBits(RetainPtr<const CFX_DIBBase> bitmap,
 }
 
 bool CPSPrinterDriver::DrawDeviceText(
-    pdfium::span<const TextCharPos> pCharPos,
+    const pdfium::span<const TextCharPos>& pCharPos,
     CFX_Font* pFont,
     const CFX_Matrix& mtObject2Device,
     float font_size,
diff --git a/core/fxge/win32/cps_printer_driver.h b/core/fxge/win32/cps_printer_driver.h
index dee5d7b92..0f74e10d4 100644
--- a/core/fxge/win32/cps_printer_driver.h
+++ b/core/fxge/win32/cps_printer_driver.h
@@ -67,7 +67,7 @@ class CPSPrinterDriver final : public RenderDeviceDriverIface {
                    const FXDIB_ResampleOptions& options,
                    std::unique_ptr<CFX_ImageRenderer>* handle,
                    BlendMode blend_type) override;
-  bool DrawDeviceText(pdfium::span<const TextCharPos> pCharPos,
+  bool DrawDeviceText(const pdfium::span<const TextCharPos>& pCharPos,
                       CFX_Font* pFont,
                       const CFX_Matrix& mtObject2Device,
                       float font_size,
diff --git a/core/fxge/win32/ctext_only_printer_driver.cpp b/core/fxge/win32/ctext_only_printer_driver.cpp
index 83594afee..2b1c879ff 100644
--- a/core/fxge/win32/ctext_only_printer_driver.cpp
+++ b/core/fxge/win32/ctext_only_printer_driver.cpp
@@ -125,7 +125,7 @@ bool CTextOnlyPrinterDriver::StartDIBits(
 }
 
 bool CTextOnlyPrinterDriver::DrawDeviceText(
-    pdfium::span<const TextCharPos> pCharPos,
+    const pdfium::span<const TextCharPos>& pCharPos,
     CFX_Font* pFont,
     const CFX_Matrix& mtObject2Device,
     float font_size,
diff --git a/core/fxge/win32/ctext_only_printer_driver.h b/core/fxge/win32/ctext_only_printer_driver.h
index 21f8ed56b..7d4f1f7e8 100644
--- a/core/fxge/win32/ctext_only_printer_driver.h
+++ b/core/fxge/win32/ctext_only_printer_driver.h
@@ -58,7 +58,7 @@ class CTextOnlyPrinterDriver final : public RenderDeviceDriverIface {
                    const FXDIB_ResampleOptions& options,
                    std::unique_ptr<CFX_ImageRenderer>* handle,
                    BlendMode blend_type) override;
-  bool DrawDeviceText(pdfium::span<const TextCharPos> pCharPos,
+  bool DrawDeviceText(const pdfium::span<const TextCharPos>& pCharPos,
                       CFX_Font* pFont,
                       const CFX_Matrix& mtObject2Device,
                       float font_size,
